{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fnil\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f4\fswiss\fprq2\fcharset128 Arial;}{\f5\fmodern\fprq1\fcharset128 Courier New;}{\f6\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f7\fnil\fprq2\fcharset0 Mangal;}{\f8\fnil\fprq0\fcharset128 Mangal;}}
{\colortbl;\red0\green0\blue0;\red128\green0\blue0;\red126\green0\blue33;\red0\green0\blue128;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057 Default;}
{\*\cs15\snext15\hich\af3\dbch\af3\loch\f3 Bullets;}
{\*\cs16\snext16\cf4\ul\ulc0\langfe255\lang255\lang255 Internet Link;}
{\s17\sbasedon0\snext18\sb240\sa120\keepn\hich\af6\dbch\af7\afs28\loch\f2\fs28 Heading;}
{\s18\sbasedon0\snext18\sb0\sa120 Text body;}
{\s19\sbasedon18\snext19\sb0\sa120\dbch\af8 List;}
{\s20\sbasedon0\snext20\sb120\sa120\noline\i\dbch\af8\afs24\ai\fs24 Caption;}
{\s21\sbasedon0\snext21\noline\dbch\af8 Index;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li3240}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\dbch\af3\fi-360\li3600}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-432\li432}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-576\li576}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-720\li720}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-864\li864}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1008\li1008}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1152\li1152}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1296\li1296}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1440\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1584\li1584}\listid2}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice}{\vern4170}}\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b\ab\rtlch \ltrch\loch\loch\f4
Kick Assembler SEUCK Framework V4}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b0\ab0\rtlch \ltrch\loch\loch\f4
by Richard Bayliss}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b0\ab0\rtlch \ltrch\loch\loch\f4
The Kick Assembler SEUCK Framework is a simplified programming utility for use with Commodore 64 games created using either the Shoot Em Up Construction Kit by Sensible Software or the Sideways Scrolling SEUCK by Jon Wells. With this frame work you can enhance your very own games created on either of the two utilities. The purpose of this framework is to do as follows:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Create and develop a new animated front end with / high score table and saver. (FRAMEWORK_NORMAL}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Create and develop a new animated front end with a bitmap logo and animated text at the bottom (FRAMEWORK_BITMAP)}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Create and develop a new animated front end with colour rolling (SEUCKMOD)}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Play title or in game music}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Enhance gameplay with simplified power ups }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Player / Bullet animation upgrades.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Enhance gameplay by using smart bomb / full boss explosion features}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Add scrolling single characters in game horizontally or vertically (or perhaps both)}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Give your game mega sized sprites }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Allow the sprites go behind background obstacles as well as in front }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Automatically end the game without looping}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
Automatically skip to the next level after defeating a boss}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\listtext\pard\plain \hich\af3\dbch\af3\loch\f3 \'95\tab}\ilvl0\ls1 \li720\ri0\lin720\rin0\fi-360{\b0\ab0\rtlch \ltrch\loch\loch\f4
much more \u8211\'13 it is up to you to decide what to add :)}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b0\ab0\rtlch \ltrch\loch\loch\f4
Out of all of the SEUCK framework. This is probably one of the best, and probably will be my last one for the time being.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b\ab\rtlch \ltrch\loch\loch\f4
Getting started:\line \line }{\b0\ab0\rtlch \ltrch\loch\loch\f4
First of all, you will need to have Notepad ++, Kick Assembler and Exomizer, Dirmaster, Char Pad V2, SidReloc (Or you can use Goat Tracker V2 for making your own music) (Search for these in Google).}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b\ab\rtlch \ltrch\loch\loch\f4
Full tips on exporting programs, etc are on the SEUCK SCHOOL page. Please read those carefully and try them out.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b0\ab0\rtlch \ltrch\loch\loch\f4
\line }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b\ab\rtlch \ltrch\loch\loch\f4
Understanding the files:\line \line }{\b0\ab0\rtlch \ltrch\loch\loch\f4
The following files are set in this framework. They are as follows:\line \line }{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
framework.asm: }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This is the main target source file to assemble from, using Kick Assembler. If successful, the cross compiler will generate a stand-alone .prg of your enhanced SEUCK game. Which will then have to be crunched with either PuCrunch or Exomizer. More on this later.\line \line }{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
framework_normal.asm: }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This is the type of framework you may have remembered from V3. It uses the standard title screen with hi-score table. It allows optional in game power ups, and full in game enhancements and also in game music\line \line }{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
framework_bitmap.asm:}{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
 }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This is the type of framework for front end presentation with a bitmap logo. Please note that you should use the }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
Buzzsaw V1.0 Koala Logo Cutting Machine}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 tool on the provided disk image. This is so that your logo can be split into 3 small files, for exporting to this framework.This framework cannot play include or play in game music. It does not even include a high score table. This is in order to save memory and reduce compiling overwrite errors.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
Seuckmod.asm: }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
Suggested to be included by Pinov Vox. This adds a nice raster colour rolling effect over the hi-resolution text. It does not use power ups or additional in game enhancement features, but it does allow in game music and has a little hi score detection routine. This is perhaps the smallest of all files.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\ulnone\ulc0\b\ai\ab\rtlch \ltrch\loch\loch\f4
Variables.asm: }{\i0\ulnone\ulc0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This page sets up loads of variables and pointers in which will help you enhance your own game. If you wanted you could create a few more variables and pointers to enhance the game the way you wish it to turn out. For example, you could set some variables/pointers that set 3 different firing rates /distance for the player bullets or perhaps enable/disable directional firing on the chosen player ship. }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
Onetime.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
: This sets up the new code in to the main SEUCK game file. There is one file which you must or must not include in this code. The //Statements indicate these. It is the jsr }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
LoadHiScores}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 feature on line }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
275}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
. adding a }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
// }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
before }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
jsr LoadHiScores}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 will disable this feature. If you using }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
framework_normal.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 you NEED to include jsr LoadHiScores othewise if you are using }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
framework_bitmap.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 you need to disable it. If using }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
SeuckMod.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 you don't have to worry about it, as all features linked to }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
framework_normal.asm }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
and }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
framework_bitmap.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 will be ignored.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
Titlescreen.asm: }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This is the main code for the title screen, which is linked to }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
framework_normal.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
. It displays the full screen credits, optional charset animation (set by }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
variables.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
), scroll text with optional GET READY and GAME OVER messages. The code also flips between two pages, where the front end screen and hi score table flips after a few seconds of time. The game is started by fire in either joystick port. It is fully customizable, but try to avoid overwriting other data. Else errors will be displayed in Kick Assembler's compiler.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
Customizable features in titlescreen.asm\line \line If you are bored with the standard colour feature on the scrolling message. You can change the colour table to how you like. The }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
scrollcolourtable }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
at line }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
1367}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 contains the complete colour table which can be altered.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i\b\ai\ab\rtlch \ltrch\loch\loch\f5
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
scrollcolourtable: \tab \tab }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $09,$02,$08,$0a,$07}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $01,$01,$01,$01,$01}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $01,$01,$01,$01,$01}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $01,$01,$01,$01,$01}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $01,$01,$01,$01,$01}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $01,$01,$01,$01,$01}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $01,$01,$01,$01,$01}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $07,$0a,$08,$02,$09}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
\line }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
You can also change the colour of the flash table (line }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
1378) }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
for the hi score table. Minimum colour is $00, and Max is $07. That means you can mix a total of 8 colours altogether. }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i\b\ai\ab\rtlch \ltrch\loch\loch\f5
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
flashtable:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab .byte $00,$06,$04,$03,$01,$03,$04,$06}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
flashtableend:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
Titlescreen2.asm: }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This source file is slightly more reduced. It will display the title screen with a 40x10 multicoloured bitmap logo. There is no page flipping, no hi score but the title screen will animate character if set from }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
variables.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 to do that. TitleScreen2.asm also has the flashing colours which you can custom as above.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
Hiscore.asm }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
If you are using the framework_normal.asm you should have hiscore.asm. You can easily edit the score list at lines and messages at lines }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
15-70,}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 but be very careful how you edit the hi score table. Text could probably end out of place. Which you wouldn't want to have in your own game creation.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
Disksave.asm: }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This}{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
 }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
is the disk load/save operations for the high score table. The DOS will read from any disk drive. If tape is used, then the load/save operation will be ignored. You can also edit the filename of the hiscores at line 5 if you want to.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
InGameEnhancements.asm: }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This is the main body of the in game SEUCK enhancements. It features fully customizable power ups, smart bomb explosion and if using }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
FrameWork_Normal.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 and enabled in }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
variables.asm }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
you can init and play in game music. InGameEnhancements.asm will not work on seuckmod.asm, because it has no link to it. }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
A new feature which has been added to the }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
ingameenhancements.asm}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 code is that the player and bullet can change its own animation type (if enabled from variables.asm). There are customizable animation tables which you can edit to change the shape of the player or bullet's animation. Each byte represents the }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
sprite value}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 read in SEUCK. If you look at the objects editor carefully, you will notice the pattern can be changed.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
Line 1057 }{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
is the table for the }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
default}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 bullet, which the player has in Guillotine (Which you can also use this type of table for your game). It represents }{\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
18}{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 frames. If you have a number of frames. Say, a bullet that uses 4 frames. You can set a loop marker on to those, This is triggered by adding $fe}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
Example:\line \line }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
P1_powerUpBulletTable1:\tab .byte 000, 001, 002, 001, $fe 126}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab \tab .byte 126, 126, 126, 126, 126, 126}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf2\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
\tab \tab \tab \tab \tab .byte 126, 126, 126, 126, 126, 126}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\b\ab\rtlch \ltrch\loch\loch\f5
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
What the example bullet above does is it reads sprites 000,001,002,001 and then loops again. It is possible to expand the animation to a maximum of 18 bytes. If you use the 18}{\cf1{\*\updnprop5801}\up10\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
th}{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 byte for your animation or you are using directional / directional hold. You don't need to use the $fe loop marker. The player frame tables in lines }{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
1117 \u8211\'13 1161}{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
 can also be used the same way.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
Using direction/directional hold frames }{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
you need to use SEUCK objects editor to view the 18 frames as }{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
anim type: 18 }{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
then type in the order of the 18 bytes in to the power up / P1_powerUpBulletTable1, 2, 3, 4, P1_PlayerFrameTable, P2_PlayerFrameTable}{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
. }{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
Etc.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
Destroying Bosses and making custom power ups}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
In order to generate a customizable power up. You first need to detect the enemy object that is killed, and then check for which player has hit it. }{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
Killcheck }{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
in lines 202-210 stores the object that has been killed. We then want to check which object has been killed. Lines }{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
221-272 }{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
checks for boss objects. If a boss is hit, call a subroutine which will destroy all objects on screen (except for the player, and bullets). Bosses and power up objects are set in }{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
variables.asm}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
In Guillotine, the boss parts are all bossID values. There are 9 different boss parts in this game. (If your game has a linked end of level boss you can set the parts for the boss by changing the variable bossID1 = object number of boss part. If you have less boss parts. Duplicate the values or delete the additional boss checks by commenting out the rest of the boss objects}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
bossId1 = 29 }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
bossID2 = 30}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
bossID3 = 31}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
bossID4 = 37}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f5
bossID5 = 42\line bossID6 = 43\line bossID7 = 45\line bossID8 = 46\line bossID9 = 48}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
Lines }{\cf1\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f4
273 \u8211\'13 292 }{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
will check for a power up object that has been picked up. If the object picked up matches the powerUpID value, then the power up will take effect on the player object. }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
In Guillotine:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
powerUpID1 = object 53 (Actual enemy 32) \u8211\'13 Collectible: Pink pod}{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
\line \line When this is collected it triggers a fire power upgrade. Where the player upgrades to double bullet, treble bullet, fireball and the back to default bullet.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
PowerUpID2 = object 54 (Actual enemy 33) \u8211\'13 Collectible green pod}{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
\line \line This will give the player an extra life}{\cf3\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
\line \line PowerUpID3 = object 25 (Actual enemy 4) \u8211\'13 Collectible blue pod}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
This will trigger the smart bomb feature, like with the boss objects.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
If you would like to add more features to the player power ups, for example, changing bullet speed, or player speed, etc. I strongly recommend that you check out the Seuck Vault at }{{\field{\*\fldinst HYPERLINK "http://www.seuckvault.co.uk/" }{\fldrslt \cf4\ul\ulc0\langfe255\lang255\lang255\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
http://www.seuckvault.co.uk}{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}} and look at Jon Well's Secret of SEUCKCess feature (Part 3). This will give you a map of the player properties that can be customized. }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
Alternatively you could experiment with some of my tips that are featured in SEUCK School at }{{\field{\*\fldinst HYPERLINK "http://tnd64.unikat.sk/Seuck_School.html" }{\fldrslt \cf4\ul\ulc0\langfe255\lang255\lang255\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
http://tnd64.unikat.sk/Seuck_School.html}}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
Hopefully the rest of putting this project together should be pretty much straightforward. I hope you have fun making impressive enhancements to your own SEUCK/Sideways scrolling SEUCK productions.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i\b0\ai\ab0\rtlch \ltrch\loch\loch\f4
HAVE FUN!}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\cf1\i0\b0\ai0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b0\ab0\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\i\b\ai\ab\rtlch \ltrch\loch\loch\f4
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af9\langfe2052\dbch\af7\afs24\lang1081\loch\f0\fs24\lang2057{\b0\ab0\rtlch \ltrch\loch\loch\f4
}
\par }